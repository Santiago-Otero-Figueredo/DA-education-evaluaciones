# Generated by Django 3.2.15 on 2022-09-16 13:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=True)),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre del grupo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['profesor_curso_programa', 'nombre', 'fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='MetaObjetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=True)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la meta')),
                ('valor', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Valor objetivo a cumplir para un nivel de evaluacion en un curso del programa')),
            ],
            options={
                'ordering': ['nivel_evaluacion', 'curso_del_programa', 'nombre', 'valor'],
            },
        ),
        migrations.CreateModel(
            name='NivelEvaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=True)),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre de nivel de evaluación')),
                ('descripcion', models.TextField(verbose_name='Descripción nivel evaluación')),
                ('mide_porcentaje', models.BooleanField(default=False, verbose_name='Determina si este tipo de nivel mide un porcentaje a cumplir por los niveles evaluación asociados')),
                ('porcentaje', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Porcentaje a cumplir por la sumatoria de los niveles evaluación asociados')),
            ],
            options={
                'ordering': ['tipo_nivel', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ProfesorCursoPrograma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['periodo_academico', 'curso_programa', 'profesor'],
            },
        ),
        migrations.CreateModel(
            name='TipoNivelEvaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=True)),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre tipo de nivel')),
                ('descripcion', models.TextField(verbose_name='Descripción del tipo de nivel')),
                ('nivel', models.PositiveIntegerField(verbose_name='Nivel de jerarquía de las evaluaciones')),
                ('mide_programa', models.BooleanField(default=False, verbose_name='Determina si este tipo de niveles son para medir programas')),
                ('tipo_superior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_niveles_evaluacion', to='competencias.tiponivelevaluacion', verbose_name='Tipo de nivel superior')),
            ],
            options={
                'ordering': ['nivel'],
            },
        ),
        migrations.CreateModel(
            name='RestriccionNivelProfesorCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activa', models.BooleanField(default=True)),
                ('porcentaje', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Porcentaje')),
                ('nivel_evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='restricciones_nivel_evaluacion_asociados', to='competencias.nivelevaluacion', verbose_name='Nivel de evaluacion')),
                ('profesor_curso_programa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='restricciones_nivel_evaluacion_asociados', to='competencias.profesorcursoprograma', verbose_name='Profesor del curso del programa')),
            ],
            options={
                'ordering': ['nivel_evaluacion', 'profesor_curso_programa', 'porcentaje'],
            },
        ),
    ]
